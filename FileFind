#!/usr/bin/env python2
# (c) Copyright 2014 Josh Wright
import subprocess
import os
import sys
from tempfile import TemporaryFile

indexFile = "/home/j0sh/Documents/git/FileFind/index"
historyFile = "/home/j0sh/Documents/git/FileFind/test"
class main(object):
	def __init__(self,historyFile,doIndex,indexFile,doInteractive=True):
		self.historyFile = historyFile
		self.indexFile = indexFile
		self.lineHeight = str(43)
		self.exclude = ("/mnt/home/j0sh/.config/",
			"/mnt/home/j0sh/.PlayOnLinux/",
			"/mnt/home/j0sh/.cache/",
			"/mnt/home/j0sh/.mozilla/",
			"/mnt/home/j0sh/.local/share/Steam/",
			"/mnt/home/j0sh/.xbmc/",
			"/home/j0sh/Data-btrfs/.systemfiles/")
		self.readHistory()
		if doIndex:
			self.makeIndex()
			self.writeIndex()
		else:
			self.readIndex()
		if doInteractive:
			self.mainLoop()
			self.writeHistory()
	def readHistory(self):
		with open(self.historyFile,'r') as importFile:
			self.history = eval(importFile.read())
	def writeHistory(self):
		with open(self.historyFile,'w') as exportFile:
			exportFile.write( str( self.history ).replace(',',',\n') )
	def readIndex(self):
		self.fileList = []
		with open(self.indexFile,'r') as importFile:
			for line in importFile.read().split('\n'):
				self.fileList.append(line)
	def writeIndex(self):
		with open(self.indexFile,'w') as exportFile:
			for line in self.fileList:
				exportFile.write(line+'\n')
	def doHistoryReOrdering(self):
		historyList = sorted(self.history,key=self.history.get)
		for line in historyList[::-1]:
			if line in self.fileList:
				self.fileList.remove(line)
				self.fileList.insert(0,line)
	def makeIndex(self):
		self.fileList = []
		# home
		for line in subprocess.check_output(["find", "/mnt/home" ]).split("\n"):
			if not line.startswith(self.exclude):
				self.fileList.append(line[4:])
		# Data-btrfs
		for line in subprocess.check_output(["locate", "/home/j0sh/Data-btrfs/" ]).split("\n"):
			if not line.startswith(self.exclude):
				self.fileList.append(line)
		self.doHistoryReOrdering()
		return self.fileList
	def mainLoop(self):
		# pass
		with TemporaryFile() as fileListFile:
			fileListFile.write('\n'.join(self.fileList))
			fileListFile.seek(0)
			try:
				selection = subprocess.check_output(["dmenu", "-i", "-l", self.lineHeight, "-fn", "DejaVu Sans Mono-11", "-nb", "#000" ],stdin=fileListFile)
				selection = selection.strip('\n')
				os.system("xdg-open "+"'"+selection+"'")
			except:
				selection = ''
		try:
			self.history[selection] += 1
		except:
			if selection != '':
				self.history[selection] = 1
	# def timeSinceLastIndex(self):
if sys.argv[-1] == "IndexOnly":
	mainClass = main(historyFile,True,indexFile,doInteractive=False)
else:
	mainClass = main(historyFile,False,indexFile)